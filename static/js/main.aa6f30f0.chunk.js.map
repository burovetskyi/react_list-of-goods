{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverseList","setState","sortByName","ALPHABET","sortByLength","LENGTH","handleReset","this","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","isResetButtonVisible","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,YAAc,WACZ,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,WAAa,WACX,EAAKD,SAAS,CAAEH,SAAUL,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA/DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAezB,OAbAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKL,EAASU,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKnB,EAASY,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITjB,EACKW,EAAaO,WAItBC,QAAQC,IAAInB,EAAUD,GAEfW,GAqCgBU,CACnBxB,EACA,CAAEI,WAAUD,eAERsB,EAAuBrB,IAAaL,EAASM,MAAQF,EAE3D,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYxB,IAAaL,EAASU,WAEtCoB,QAAShB,KAAKL,WANhB,iCAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYxB,IAAaL,EAASY,SAEtCkB,QAAShB,KAAKH,aANhB,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAazB,IAEjB0B,QAAShB,KAAKP,YANhB,qBAWEmB,GACE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,YAHhB,sBAUN,6BACGE,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eApFrB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa6f30f0.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n    const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n          {\n            isResetButtonVisible && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleReset}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}